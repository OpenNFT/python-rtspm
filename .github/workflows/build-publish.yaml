name: Build and Publish

on:
  push:
    branches:
      - "!*"
    tags:
      - "v*"

jobs:
  build-manylinux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: python -m pip install -U pip setuptools

      - name: Build manylinux Python wheels
        uses: RalfG/python-wheels-manylinux-build@v0.3.4-manylinux2014_x86_64
        with:
          python-versions: 'cp38-cp38 cp39-cp39 cp310-cp310 cp311-cp311 cp312-cp312'
          build-requirements: 'pybind11'

      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: manylinux-wheels
          path: dist/*manylinux*.whl

  build-macos:
    runs-on: ${{ matrix.platform }}

    strategy:
      max-parallel: 8
      matrix:
        platform:
          - macos-latest
        python-version: [ "3.8", "3.9", "3.10", "3.11",  "3.12" ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: python -m pip install -U pip setuptools

      - name: Build macos Python wheel
        run: python -m pip wheel . --no-deps -w ./dist

      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: macos-wheels
          path: dist/*.whl

  build-windows:
    runs-on: ${{ matrix.platform }}

    strategy:
      max-parallel: 8
      matrix:
        platform:
          - windows-latest
        python-version: [ "3.8", "3.9", "3.10", "3.11",  "3.12" ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: python -m pip install -U pip setuptools

      - name: Setup MSVC toolset
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64
          toolset: 14.2

      - name: Build windows Python wheel
        run: python -m pip wheel . --no-deps -w ./dist

      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: windows-wheels
          path: dist/*.whl

  upload-to-pypi:
    needs: [build-manylinux, build-macos, build-windows]
    environment: PyPI
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: |
          python -m pip install -U pip setuptools
          python -m pip install poetry twine

      - name: Build Python sdist
        run: poetry build -f sdist

      - name: Download manylinux-wheels
        uses: actions/download-artifact@v2
        with:
          name: manylinux-wheels
          path: dist

      - name: Download macos-wheels
        uses: actions/download-artifact@v2
        with:
          name: macos-wheels
          path: dist

      - name: Download windows-wheels
        uses: actions/download-artifact@v2
        with:
          name: windows-wheels
          path: dist

      - name: Display dist files to upload to PyPI
        run: ls -R
        working-directory: dist

      - name: Upload dist/wheels to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: twine upload dist/*
